" init
set nocompatible

let g:is_mac = has('mac')
let g:is_linux = has('unix') || has('win32unix') || has('win64unix')
let g:is_win = has('win32') || has('win64')

let $PATH = "~/.pyenv/shims:".$PATH

if len($HOME)
let g:home = expand('$HOME')
  set runtimepath-=~/.vim
  set runtimepath+=$HOME/.vim
elseif len($USERPROFILE)
  let g:home = expand('$USERPROFILE')
else
  let g:home = expand('~')
endif

let g:vim_home = g:home . (g:is_win ? '/vimfiles' : '/.vim')
let g:rc_dir = g:vim_home . '/rc'

function! s:load_rc(file)
  execute 'source ' . g:rc_dir . '/' . a:file . '.vim'
endfunction

let load_rc_list = [
      \ 'dein',
      \ 'set',
      \ 'encoding',
      \ 'filetype',
      \ 'os',
      \ 'mapping' ]

for rc in load_rc_list
  call s:load_rc(rc)
endfor

let g:python3_host_prog = expand('$HOME') . '/.pyenv/shims/python'

" https://github.com/fatih/vim-go/issues/108
" Quickfix window opening beneath TagBar
autocmd FileType qf wincmd J

filetype detect

" Use vsplit mode
" http://qiita.com/kefir_/items/c725731d33de4d8fb096
if has("vim_starting") && !has('gui_running') && has('vertsplit')
  function! EnableVsplitMode()
    " enable origin mode and left/right margins
    let &t_CS = "y"
    let &t_ti = &t_ti . "\e[?6;69h"
    let &t_te = "\e[?6;69l\e[999H" . &t_te
    let &t_CV = "\e[%i%p1%d;%p2%ds"
    call writefile([ "\e[?6;69h" ], "/dev/tty", "a")
  endfunction

  " old vim does not ignore CPR
  map <special> <Esc>[3;9R <Nop>

  " new vim can't handle CPR with direct mapping
  " map <expr> ^[[3;3R EnableVsplitMode()
  set t_F9=^[[3;3R
  map <expr> <t_F9> EnableVsplitMode()
  let &t_RV .= "\e[?6;69h\e[1;3s\e[3;9H\e[6n\e[0;0s\e[?6;69l"
endif
