# Class Diagram

snippet     class
options     head
	class "${1:Hoge}" as ${2:hoge}{
		${0}
	}

snippet     object
options     head
	object "${1:Hoge}" as ${2:hoge}{
		${0}
	}

snippet     ..
options     head
	${1:Class01 "1"} .. ${2:"many" Class02} :${3: < owns}

snippet     --|>
options     head
	${1:Class01 "1"} --|> ${2:"many" Class02} :${3: < owns}

snippet     --*
options     head
	${1:Class01 "1"} --* ${2:"many" Class02} :${3: < owns}

snippet     --o
options     head
	${1:Class01 "1"} --o ${2:"many" Class02} :${3: < owns}

snippet     --+
options     head
	${1:package01.foo} --+ ${2:package02.bar} :${3: message}

snippet     private
alias       -
options     head
	-${1:val_name}

snippet     protected
alias       #
options     head
	#${1:val_name}

snippet     package-private
alias       ~
options     head
	~${1:val_name}

snippet     public
alias       +
options     head
	+${1:val_name}


# Activity Diagram (beta)

snippet     if
options     head
	if (${1:Graphviz installed?}) then (${2:yes})
		:${3:process all\ndiagrams};
	${4:elseif (condition) then (yes)}
	else (${4:no})
		:${5:__sequence__ and __activity__ diagrams};
	endif

snippet     repeat
options     head
	repeat
		:${2:read data};
		${0}
	repeat while (${1:more data?})

snippet     while
options     head
	while (${1:data available?})
		:${2:read data};
		${0}
	endwhile

snippet     fork
options     head
	if (${1:multiprocessor?}) then (${2:yes})
	fork
		:{$3:Treatment 1};
	fork again
		:${4:Treatment 2};
	end fork

snippet     partition
options     head
	partition ${1:name}{
		:${0}
	}

snippet     swimlane
options     head
	|${1:#AntiqueWhite|}${2:Swimlane1}|
	${0}


# Sequence Diagram

snippet     autonumber
options     head
	autonumber ${1:40} ${2:10} ${3:"<font color=red><b>Message 0  "}
	${0}
	autonumber stop

snippet     newpage
options     head
	newpage ${1:A title for the\nlast page}

snippet     alt
options     head
	alt ${1:successful case}
		${0}
	else ${2:some kind of failure}
	end

snippet     opt
options     head
	opt ${1:condition}
		${0}
	end

snippet     par
options     head
	par
		${0}
	else

	end

snippet     ref
options     head
	ref over ${1:Alice, Bob}
		${0}
	end

snippet     group
options     head
	group ${1:name}
		${0}
	end

snippet     critical
options     head
	critical ${1:condition}
		${0}
	end

snippet     break
options     head
	break ${1:condition}
		${0}
	end

snippet     loop
options     head
	loop ${1:1000 times}
		${2:Alice -> Bob: DNS Attack}
	end

snippet     hnote
options     head
	hnote${1: over caller} : ${2:idle}
	${0}

snippet     activate-deactivate
alias       activate
options     head
	activate ${1:A}
		${3:Alice <-- Bob: Done}
	deactivate ${2:A}

snippet     activate-destroy
options     head
	activate ${1:A}
		${0}
	destroy ${2:A}

snippet     ++
alias       shortcut-activate
options     head
	${1:alice -> bob} ++ : ${2:hello}

snippet     --
alias       shortcut-deactivate
options     head
	${1:alice -> bob} -- : ${2:hello}

snippet     **
alias       shortcut-create
options     head
	${1:alice -> bob} ** : ${2:hello}

snippet     !!
alias       shortcut-activate
options     head
	${1:alice -> bob} !! : ${2:hello}

snippet     autoactivate
alias       activate-auto
options     head
	autoactivate on

snippet     return
options     head
	return ${message}

snippet     participant
options     head
	participant "${1:Famous Bob}" as ${2:Bob}${3: << Generated >>}

snippet     actor
alias       participant-actor
options     head
	actor "${1:Famous Bob}" as ${2:Bob}${3: << Generated >>}

snippet     boudary
alias       participant-boudary
options     head
	boudary "${1:Famous Bob}" as ${2:Bob}${3: << Generated >>}

snippet     control
alias       participant-control
options     head
	control "${1:Famous Bob}" as ${2:Bob}${3: << Generated >>}

snippet     entity
alias       participant-entity
options     head
	entity "${1:Famous Bob}" as ${2:Bob}${3: << Generated >>}

snippet     database
alias       participant-database
options     head
	database "${1:Famous Bob}" as ${2:Bob}${3: << Generated >>}

snippet     create
alias       participant-create
options     head
	create ${1:"participant"} as ${2:New}

snippet     box
options     head
	box "${1:Internal Service}" #${2:LightBlue}
		participant ${3:Alice}
		${0}
	end box

snippet     space
alias       |||
options     head
	||${1:45|}|

snippet     ...
options     head
	...${1: comment ...}


# Common syntax

snippet     note
options     head
	${1:floating }note ${2:right}${3: of Foo}
		${4:* Calling the method ""foo()"" is prohibited}
		${0}
	end note

snippet     img
options     head
alias       image
	<img ${1:sourceforge.jpg}>
	${0}

snippet     (*)
options     head
	(*)-->
	${0}
	-->(*)

snippet     startuml
options     head
	@startuml
	skinparam monochrome true
	skinparam shadowing false
	${0}
	@enduml

snippet     hide-circle
options     head
	hide circle

snippet     monochrome
alias       skinparam-monochrome
options     head
	skinparam monochrome ${1:true}

snippet     shadowing
alias       skinparam-shadowing
options     head
	 skinparam shadowing ${1:false}
